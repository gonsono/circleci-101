version: 2
jobs:
  get_source:
    docker:
      - image: circleci/python
    steps:
      - checkout 
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  lint:
    docker:
      - image: circleci/python
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
            - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Install Flake8
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install flake8
      - run:
          name: Run Flake8
          command: |
            venv/bin/flake8  --exclude venv .
  tests:
    docker:
      - image: circleci/python
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
            - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Install LicCheck
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pytest
      - run:
          name: Run tests
          command: |
            venv/bin/pytest -v
  test_coverage:
    docker:
      - image: circleci/python
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
            - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Install LicCheck
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pytest-cov
      - run:
          name: Run tests
          command: |
            venv/bin/pytest --cov-fail-under=10 --cov=. tests/
  check_licensing:
    docker:
      - image: circleci/python
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
            - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Install LicCheck
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install liccheck
      - run:
          name: Run LicCheck
          command: |
            venv/bin/liccheck -r requirements.txt -s strategy.ini
  build_push:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
            - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t sample:0.1 .
workflows:
  version: 2
  CI-python:
    jobs:
      - get_source
      - lint:
          requires:
            - get_source
      - tests:
          requires:
            - get_source
      - test_coverage:
          requires:
            - tests
      - check_licensing:
          requires:
            - test_coverage
            - lint
      - build_push:
          requires:
            - check_licensing
